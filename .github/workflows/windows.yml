name: E2E Windows (Google Cloud)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  windows-e2e:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fs: ['ReFS']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup GCP environment
        uses: google-github-actions/setup-gcloud@v1

      - name: Generate random instance and disk name
        run: |
          INSTANCE_UUID=$(uuidgen | cut -d'-' -f1)
          INSTANCE_NAME="vm-$INSTANCE_UUID"
          DISK_NAME="$INSTANCE_NAME-disk"
          echo "INSTANCE_NAME=$INSTANCE_NAME" >> $GITHUB_ENV
          echo "DISK_NAME=$DISK_NAME" >> $GITHUB_ENV

      - name: Generate SSH key pair
        run: |
          ssh-keygen -t rsa -b 4096 -f ./gcloud -C "${{ secrets.GCP_MAIL }}" -N ""

      - name: Set default project
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Create GCP VM with Spot provisioning
        run: |
          gcloud compute instances create $INSTANCE_NAME \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --zone=us-central1-a \
            --machine-type=e2-medium \
            --image-family=windows-2022 \
            --image-project=windows-cloud \
            --no-restart-on-failure \
            --maintenance-policy=TERMINATE \
            --provisioning-model=SPOT \
            --instance-termination-action=DELETE \
            --create-disk=size=10GB,device-name=$DISK_NAME,mode=rw,type=projects/${{ secrets.GCP_PROJECT_ID }}/zones/us-central1-a/diskTypes/pd-balanced \
            --metadata sysprep-specialize-script-cmd="googet -noconfirm=true install google-compute-engine-ssh",enable-windows-ssh=TRUE,ssh-keys="${{ secrets.GCP_USER }}:$(cat ./gcloud.pub)"

      - name: Wait 2 minutes for VM to start
        run: |
          sleep 120
          
      - name: Run init script
        run: |
          gcloud compute ssh $INSTANCE_NAME --zone=us-central1-a --command="powershell.exe -Command \"$(cat scripts/windows.ps1 | sed 's/"/`\"/g' | sed ':a;N;$!ba;s/\n/`n/g' | sed 's/^.\(.*\).$/\1/')\"" --ssh-key-file=./gcloud

      - name: Copy the repo
        run: |
            REPO_NAME=$(basename $(git rev-parse --show-toplevel))
            gcloud compute scp --recurse --zone=us-central1-a ../$REPO_NAME $INSTANCE_NAME:"Z:\code" --ssh-key-file=./gcloud
      
      - name: List files in project directory
        run: |
            gcloud compute ssh $INSTANCE_NAME --zone=us-central1-a --command="cd Z:\code\$REPO_NAME && ls -la" --ssh-key-file=./gcloud
    
      - name: Run tests
        run: |
          gcloud compute ssh $INSTANCE_NAME --zone=us-central1-a --command="C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -Command ' $env:Path = \"C:\\Users\\Administrator\\.cargo\\bin;$env:Path\"; cd Z:\\code\\$REPO_NAME; cargo test'" --ssh-key-file=./gcloud
      
      # Cleanup
      - name: Delete GCP VM if exists
        if: always()
        run: |
          if gcloud compute instances describe $INSTANCE_NAME --zone=us-central1-a > /dev/null 2>&1; then
            gcloud compute instances delete $INSTANCE_NAME --zone=us-central1-a --quiet
          else
            echo "VM does not exist. Skipping deletion."
          fi

      - name: Delete GCP Disk if exists
        if: always()
        run: |
          if gcloud compute disks describe $DISK_NAME --zone=us-central1-a > /dev/null 2>&1; then
            gcloud compute disks delete $DISK_NAME --zone=us-central1-a --quiet --async
          else
            echo "Disk does not exist. Skipping deletion."
          fi